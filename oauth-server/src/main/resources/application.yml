server:
  port: 9999
  session:
      cookie:
        name: AUTHSESSION
#  context-path: /auth
#--------------分割线----------------#   
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  application:
    name: auth-server
  session:
    store-type: redis
  redis:
    cluster:
      password:
      expireseconds: 120
      nodes: 192.168.140.188:7000,192.168.140.188:7001,192.168.140.188:7002,192.168.140.188:7003,192.168.140.188:7004,192.168.140.188:7005
      timeout: 2000 #redis操作的超时时间
      max-redirects: 7
    pool:
      maxActive: 5000 #最大连接数
      maxIdle: 30 #最大空闲连接数
      minIdle: 5 #最小空闲连接数
      maxWait: 3000  #获取连接最大等待时间 ms  #default -1
  datasource: 
    url: jdbc:mysql://192.168.140.188:3306/basedata?useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 连接池的配置信息
    # 初始化大小，最小，最大
    maxActive: 20
    initialSize: 5
    minIdle: 5
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    filters: stat

# 配置mybatis-plus
mybatis-plus:
  # 配置扫描xml
  mapper-locations:
    - classpath:com/kitty/springcloud/oauth/server/mapper*.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.kitty.springcloud.oauth.server.entity
  global-config:
    # 逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#--------------分割线----------------#
eureka: 
  instance:
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
  client: 
    healthcheck: 
      enabled: true
    serviceUrl: 
      defaultZone: http://eurekaserver1:1001/eureka/
      #defaultZone=http://eurekaserver1:1001/eureka/,http://eurekaserver2:1002/eureka/,http://eurekaserver3:1003/eureka/
#--------------分割线----------------#

security:
  oauth2:
    resource:
      filter-order: 3